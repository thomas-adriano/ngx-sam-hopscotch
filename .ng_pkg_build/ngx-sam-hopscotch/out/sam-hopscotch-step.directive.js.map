{"version":3,"file":"sam-hopscotch-step.directive.js","sourceRoot":"","sources":["sam-hopscotch-step.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,UAAU,EAEV,KAAK,EAEN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,0BAA0B,EAAE,MAAM,iCAAiC,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAKxD,MAAM;;;;;;IAGJ,YACU,IACA,kBACA;QAFA,OAAE,GAAF,EAAE;QACF,qBAAgB,GAAhB,gBAAgB;QAChB,qBAAgB,GAAhB,gBAAgB;QAExB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,CAAC,IAAI,EAAE,CAAC;KACrD;;;;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACtD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC,IAAI,EAAE,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;SAC9C,CAAC,CAAC;KACJ;;;;IAED,WAAW;QACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC;SACR;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;SAC1C;KACF;;;;IAGD,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;;;;IAIxB,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;;;;;IAGf,SAAS,CAAC,KAAa;QAC7B,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;;;;YA1CvD,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;;YAXC,UAAU;YAKH,0BAA0B;YAE1B,gBAAgB;;;qBAMtB,KAAK,SAAC,kBAAkB;6BA2BxB,YAAY,SAAC,YAAY;6BAKzB,YAAY,SAAC,YAAY","sourcesContent":["import {\n  Directive,\n  HostListener,\n  ElementRef,\n  OnInit,\n  Input,\n  OnChanges\n} from \"@angular/core\";\nimport { SamHopsctochConfigsService } from \"./sam-hopsctoch-configs.service\";\nimport { HopscotchStep } from \"./hopscotch-step\";\nimport { LibEventsService } from \"./lib-events.service\";\n\n@Directive({\n  selector: \"[samHopscotchStep]\"\n})\nexport class SamHopscotchStepDirective implements OnInit, OnChanges {\n  @Input('samHopscotchStep') public step: HopscotchStep;\n\n  constructor(\n    private el: ElementRef,\n    private hopsctochConfigs: SamHopsctochConfigsService,\n    private libEventsService: LibEventsService\n  ) {\n    this.libEventsService.hopscotchStepCreated().emit();\n  }\n\n  ngOnInit() {\n    this.libEventsService.hopscotchStarted().subscribe(() => {\n      this.hopsctochConfigs.addStep(this.step);\n      this.libEventsService.hopscotchStepInitialized().emit();\n      console.log(this.hopsctochConfigs.getTour());\n    });\n  }\n\n  ngOnChanges() {\n    if (!this.step) {\n      return;\n    }\n    if (!this.step.target) {\n      this.step.target = this.el.nativeElement;\n    }\n  }\n\n  @HostListener(\"mouseenter\")\n  onMouseEnter() {\n    this.highlight(\"red\");\n  }\n\n  @HostListener(\"mouseleave\")\n  onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}\n"]}